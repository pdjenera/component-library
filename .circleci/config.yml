# This config was automatically generated from your source code
# Stacks detected: deps:node:.,package_manager:yarn:,test:jest:
version: 2.1
orbs:
  node: circleci/node@5
jobs:
  linting:
    # Install node dependencies and run linter
    executor: node/default
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn
      - run:
          name: Lint
          command: yarn run lint
  testing:
    # Install node dependencies and run tests
    executor: node/default
    environment:
      JEST_JUNIT_OUTPUT_DIR: ./test-results/
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn
      - run:
          command: yarn add jest-junit --ignore-workspace-root-check
      - run:
          name: Run tests
          command: yarn run test --ci --runInBand --reporters=default --reporters=jest-junit
      - store_test_results:
          path: ./test-results/
  building:
    # Build node project
    executor: node/default
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn
      - run:
          command: yarn run build
      - run:
          name: Create the ~/artifacts directory if it doesn't exist
          command: mkdir -p ~/artifacts
      # Copy output to artifacts dir
      - run:
          name: Copy artifacts
          command: cp -R build dist public .output .next .docusaurus ~/artifacts 2>/dev/null || true
      - store_artifacts:
          path: ~/artifacts
          destination: node-build
  run_release:
    executor: node/default
    description: Run release
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn
      - run:
          name: Set up git credentials
          command: |
            git config --global user.email $GIT_EMAIL 
            git config --global user.name $GIT_NAME
      - run:
          name: Run release
          command: yarn run release
  publish_to_npm:
    executor: node/default
    description: Publish to npm
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn
      - run:
          name: Login to npm
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc
      - run:
          name: Publish to npm
          command: yarn semantic-release
          enironment:
            NPM_TOKEN: $NPM_TOKEN
            GIT_TOKEN: $GIT_TOKEN

  deploy:
    # This is an example deploy job, not actually used by the workflow
    docker:
      - image: cimg/base:stable
    steps:
      # Replace this with steps to deploy to users
      - run:
          name: deploy
          command: '#e.g. ./deploy.sh'
workflows:
  build-and-test:
    jobs:
      - linting
      - testing:
          requires:
            - linting
      - building:
          requires:
            - testing
      - run_release:
          requires:
            - building
      - publish_to_npm:
          requires:
            - run_release
    # - deploy:
    #     requires:
    #       - build-node
